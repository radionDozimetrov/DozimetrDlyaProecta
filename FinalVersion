//Библотеки 6 шт.
#include <DHT.h>                   
#include <Adafruit_GFX.h>         
#include <Adafruit_ST7735.h>      
#include <Wire.h>                 
#include <CG_RadSens.h>           
#include <RTClib.h> // Для часов реального времени

#define DHTPIN 2                  
#define DHTTYPE DHT11             
DHT dht(DHTPIN, DHTTYPE);         

Adafruit_ST7735 tft = Adafruit_ST7735(10, 8, 9);
#define RADSENS_ADDRESS 0x66      
CG_RadSens rad(RADSENS_ADDRESS);  

RTC_DS3231 rtc; // Объект для работы с DS3231

#define BUZZER_PIN 3              
#define LED_PIN 4                 

uint32_t lastPulseCount = 0;  
int graphX = 0;  
float lastRadIntensity = 0;  
unsigned long lastTime = 0;  
float totalDose = 0;  

void setup() {
    dht.begin();
    Serial.begin(9600);
    Wire.begin(); // Запуск I2C
    rtc.begin(); // Инициализация часов

    if (rtc.lostPower()) {
        rtc.adjust(DateTime(F(DATE), F(TIME))); // Установка времени из компиляции
    }

    tft.initR(INITR_BLACKTAB);
    tft.fillScreen(ST77XX_BLACK);
    tft.setTextColor(ST77XX_WHITE);
    tft.setTextSize(1);

    pinMode(BUZZER_PIN, OUTPUT);
    pinMode(LED_PIN, OUTPUT);
    digitalWrite(LED_PIN, LOW);

    tft.setCursor(0, 0);
    tft.print("Hello");
    delay(2000);
    tft.fillScreen(ST77XX_BLACK);

    if (!rad.init()) {
        Serial.println("RadSens не найден!");
        while (1);
    }

    Serial.println("RadSens подключён.");
    lastTime = millis();
}

void loop() {
    float temperature = dht.readTemperature();
    float humidity = dht.readHumidity();

    if (isnan(temperature) || isnan(humidity)) {
        Serial.println("Ошибка DHT11!");
        return;
    }

    float radIntensityDynamic = rad.getRadIntensyDynamic();
    uint32_t pulseCount = rad.getNumberOfPulses();

    if (radIntensityDynamic == 0) {
        radIntensityDynamic = lastRadIntensity;
    } else {
        lastRadIntensity = radIntensityDynamic;
    }

    unsigned long currentTime = millis();
    if (currentTime - lastTime >= 3000) {
        float timeElapsedInHours = 3000.0 / 3600000.0;
        totalDose += radIntensityDynamic * timeElapsedInHours;
        lastTime = currentTime;
    }

    if (pulseCount > lastPulseCount) { 
        digitalWrite(LED_PIN, HIGH);
        delay(50);
        digitalWrite(LED_PIN, LOW);
        lastPulseCount = pulseCount;
    }

    if (radIntensityDynamic > 30) {
        tone(BUZZER_PIN, 1000);
    } else {
        noTone(BUZZER_PIN);
    }

    Serial.print("Темп: "); Serial.print(temperature); Serial.println(" C");
    Serial.print("Влажн: "); Serial.print(humidity); Serial.println(" %");
    Serial.print("Рад: "); Serial.print(radIntensityDynamic); Serial.println(" мкР/ч");
    Serial.print("Импульсы: "); Serial.println(pulseCount);
    Serial.print("Dose for 3 seconds: "); Serial.println(totalDose);

    // Отображение времени вверху
    DateTime now = rtc.now();
    tft.setCursor(0, 0);
    tft.fillRect(0, 0, tft.width(), 10, ST77XX_BLACK);
    tft.setTextColor(ST77XX_GREEN);
    if (now.hour() < 10) tft.print("0");
    tft.print(now.hour());
    tft.print(":");
    if (now.minute() < 10) tft.print("0");
    tft.print(now.minute());
    tft.print(":");
    if (now.second() < 10) tft.print("0");
    tft.print(now.second());

    // Остальной вывод
    tft.setCursor(0, 20);
    tft.fillRect(0, 20, tft.width(), 10, ST77XX_BLACK);
    tft.setTextColor(ST77XX_YELLOW);
    tft.print("Temp: "); tft.print(temperature); tft.println(" C");

    tft.setCursor(0, 40);
    tft.fillRect(0, 40, tft.width(), 10, ST77XX_BLACK);
    tft.setTextColor(ST77XX_CYAN);
    tft.print("Humidity: "); tft.print(humidity); tft.println(" %");

    tft.setCursor(0, 60);
    tft.fillRect(0, 60, tft.width(), 10, ST77XX_BLACK);
    tft.setTextColor(ST77XX_RED);
    tft.print("Rad: "); tft.print(radIntensityDynamic); tft.println(" mcR/h");

    tft.setCursor(0, 80);
    tft.fillRect(0, 80, tft.width(), 10, ST77XX_BLACK);
    tft.setTextColor(ST77XX_WHITE);
    tft.print("Pulses: "); tft.print(pulseCount);
tft.setCursor(0, 100);
    tft.fillRect(0, 100, tft.width(), 10, ST77XX_BLACK);
    tft.setTextColor(ST77XX_MAGENTA);
    tft.print("Total Dose: "); tft.print(totalDose); tft.println(" mcR");

    graphX = (graphX + 1) % tft.width();
    int radValue = map(radIntensityDynamic, 0, 100, tft.height() - 20, 0);
    radValue = constrain(radValue, 0, tft.height() - 20);
    tft.drawLine(graphX - 1, radValue, graphX, tft.height() - 20 - map(radIntensityDynamic, 0, 100, 0, 40), ST77XX_GREEN);
    tft.drawLine(0, tft.height() - 20, tft.width(), tft.height() - 20, ST77XX_WHITE);

    delay(1000); // Теперь обновляем каждую секунду
}
